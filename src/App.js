import React from 'react';
import './App.css';

function App() {
  const whatsappLoginUrl = 'https://wa.me/916309310081'; // Your WhatsApp login URL

  return (
    <div className="container">
      <h1>WhatsApp Login</h1>
      <img className="qr-code" src={`https://api.qrserver.com/v1/create-qr-code/?data=${encodeURIComponent(whatsappLoginUrl)}&amp;size=200x200`} alt="WhatsApp QR Code" />
      <p id='scanQR'>Scan the QR code to log in to WhatsApp</p>
      <a href={whatsappLoginUrl} className="scan-button" target="_blank" rel="noopener noreferrer">Scan QR Code</a>
      <div className="docs">
        <h2 className="highlight">WahGPT - WhatsApp Chatbot with ChatGPT Integration</h2>
        <p>
          WahGPT is a WhatsApp chatbot built using the @whiskeysockets/baileys library, allowing users to interact with an intelligent chatbot powered by GPT (ChatGPT4). This README provides a comprehensive explanation of the code structure and functionality.
        </p>
        <h3 className="highlight">Features</h3>
        <ul>
          <li>WhatsApp Integration: Utilizes @whiskeysockets/baileys to connect to the WhatsApp Web platform, enabling the bot to send and receive messages.</li>
          <li>GPT Integration: Communicates with the ChatGPT API to generate responses based on user input.</li>
        </ul>
        <h3 className="highlight">Getting Started</h3>
        <h4>Prerequisites</h4>
        <ul>
          <li>Node.js and npm installed on your machine.</li>
          <li>WhatsApp account and a phone with an active internet connection.</li>
        </ul>
        <h4>Installation</h4>
        <ol>
          <li>Clone the repository:</li>
          <code>git clone https://github.com/abubakar1080/WahGPT.git</code>
          <li>Navigate to the project directory:</li>
          <code>cd WahGPT</code>
          <li>Install dependencies:</li>
          <code>npm install</code>
          <li>Run the application:</li>
          <code>npm start</code>
          <li>Scan the QR code displayed with your WhatsApp Web to authenticate.</li>
        </ol>
        <h3 className="highlight">Code Structure</h3>
        <ol>
          <li><strong>Initialization:</strong> The script initializes the WhatsApp client and sets up event listeners for authentication, QR code display, and readiness.</li>
          <li><strong>Authentication and State Management:</strong> It manages authentication state using the useMultiFileAuthState function from @whiskeysockets/baileys.</li>
          <li><strong>Message Processing:</strong> The bot listens for incoming messages and interacts with the ChatGPT API to generate responses.</li>
          <li><strong>Connection Handling:</strong> Event listeners handle connection updates, such as QR code display, connection establishment, and disconnection.</li>
          <li><strong>Error Handling:</strong> The script includes error handling to gracefully manage API errors and other exceptions.</li>
        </ol>
        <h3 className="highlight">Usage</h3>
        <ul>
          <li>Send messages to the WhatsApp number associated with the bot.</li>
          <li>Experience intelligent responses generated by ChatGPT.</li>
        </ul>
        <h3 className="highlight">Contributing</h3>
        <p>Feel free to contribute by submitting issues or pull requests. Your feedback and improvements are welcomed!</p>
        <h3 className="highlight">License</h3>
        <p>This project is licensed under the MIT License - see the LICENSE file for details.</p>
        <h3 className="highlight">Acknowledgments</h3>
        <p>Thanks to the authors of @whiskeysockets/baileys for providing a powerful library for WhatsApp Web automation.</p>
        <p>Appreciation to OpenAI for ChatGPT APIs.</p>
        <p>Happy Chatting with WahGPT! ðŸ¤–ðŸš€</p>
      </div>
    </div>
  );
}

export default App;
